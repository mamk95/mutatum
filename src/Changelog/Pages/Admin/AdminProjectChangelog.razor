@page "/admin/project/{projectSlug}"
@attribute [Authorize]

@inject ProjectService _projectService
@inject IOptions<BrandingOptions> _brandingOptions

<PageTitle>@project?.Name | @_brandingOptions.Value.Name</PageTitle>

@if (failedToLoad)
{
    <div>Failed to load the project. Try again later.</div>
}
else if (project == null)
{
    <div>Loading...</div>
}
else
{
    <div>
        <h2 class="d-inline">
            Changelog: @project.Name
            @if (project.Hidden)
            {
                <span>&nbsp;(Hidden)</span>
            }
        </h2>

        <a aria-label="Edit project" class="mx-2" href="@($"/admin/project/{@project.UrlSlug}/edit")">
            <span class="oi oi-pencil" aria-hidden="true"></span>
        </a>
    </div>

    <a href="@($"/admin/project/{projectSlug}/release/new")">Create new release</a>

    @if (project.Releases == null || project.Releases.Count < 1)
    {
        <div>No releases for this project</div>
    }

    @foreach (var release in project.Releases)
    {
        <ReleaseDetailed release="@release" showAdminButtons="@true" />
    }
}



@code {
    [Parameter]
    public string projectSlug { get; set; }

    private Project project { get; set; }

    private bool failedToLoad { get; set; } = false;

    protected override void OnParametersSet()
    {
        project = _projectService.GetProjectBySlug(projectSlug, includeHidden: true);

        if (project == null)
        {
            failedToLoad = true;
        }
    }
}
