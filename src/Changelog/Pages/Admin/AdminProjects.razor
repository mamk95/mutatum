@page "/admin/project"
@attribute [Authorize]

@using Changelog.Data
@inject ProjectService _projectService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<h3>Projects</h3>

@if (projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <a href="/admin/project/new">Create new project</a>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Order</th>
                <th>Name</th>
                <th>Description</th>
                <th style="width: 80px;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)
            {
                <tr>
                    <td>@project.Id</td>
                    <td>@project.SortOrder</td>
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    <td>
                        <a aria-label="Edit" class="mx-2" href="@($"/admin/project/{@project.Id}/edit")">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>

                        <a role="button" aria-label="Delete" @onclick="() => { projectToDelete = project; deleteModal.Open(); }">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <Modal @ref="deleteModal">
        <Title>Delete project?</Title>
        <Body>
            <p>
                Do you want to delete the selected project?
                <br />
                <b>ID:</b> @projectToDelete?.Id
                <br />
                <b>Name:</b> @projectToDelete?.Name
            </p>
        </Body>
        <Footer>
            <button type="button" class="btn btn-danger" @onclick="() => DeleteProject(projectToDelete.Id)">Delete</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => deleteModal.Close()">Cancel</button>
        </Footer>
    </Modal>
}

@code {
    private IList<Project> projects { get; set; }

    private Modal deleteModal { get; set; }

    private Project projectToDelete { get; set; }

    protected override async Task OnInitializedAsync()
    {
        projects = _projectService.GetProjects();
    }

    private void DeleteProject(int id)
    {
        _projectService.DeleteProjectById(id);
        NavigationManager.NavigateTo(NavigationManager.Uri, true); // Reload page to update e.g. navbar
    }
}
