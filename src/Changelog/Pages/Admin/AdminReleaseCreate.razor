@page "/admin/project/{projectSlug}/release/new"
@attribute [Authorize]

@inject ProjectService _projectService
@inject ReleaseService _releaseService
@inject NavigationManager NavigationManager


<EditForm EditContext="@EditContext" OnValidSubmit="CreateRelease">
    <Changelog.Shared.EditForms.ReleaseEditForm release="@release" />

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

<div class="my-3">
    <div class="d-flex justify-content-between align-items-center">
        <h4>Preview (detailed)</h4>

        <button class="btn btn-link" type="button" @onclick="() => StateHasChanged()">
            <span class="oi oi-loop-circular" aria-hidden="true"></span> Update preview
        </button>
    </div>

    <div style="padding: 32px; border: 1px solid black; border-radius: 4px;">
        <ReleaseDetailed release="@release" />
    </div>
</div>

@code {
    [Parameter]
    public string projectSlug { get; set; }

    private Release release { get; set; } = new Release();

    private EditContext EditContext;

    protected override void OnInitialized()
    {
        EditContext = new EditContext(release);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        StateHasChanged(); // To update preview
    }

    private void CreateRelease()
    {
        release.ProjectId = _projectService.GetProjectIdBySlug(projectSlug, includeHidden: true);
        _releaseService.CreateRelease(release);
        NavigationManager.NavigateTo($"/admin/project/{projectSlug}", true);
    }
}
