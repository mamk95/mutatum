@page "/admin/release/{releaseId:int}"
@attribute [Authorize]

@inject ReleaseService _releaseService
@inject NavigationManager NavigationManager

@if (failedToLoad)
{
    <div>Failed to load the release. Try again later.</div>
}
else
{
    <EditForm EditContext="@EditContext" OnValidSubmit="UpdateRelease">
        <Changelog.Shared.EditForms.ReleaseEditForm release="@release" />

        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
}

<div class="my-3">
    <h4>Preview (detailed)</h4>

    <div style="padding: 32px; border: 1px solid black; border-radius: 4px;">
        <ReleaseDetailed release="@release" />
    </div>
</div>

@code {
    [Parameter]
    public int releaseId { get; set; }

    private Release release { get; set; }

    private bool failedToLoad { get; set; } = false;

    private EditContext EditContext;

    protected override void OnParametersSet()
    {
        release = _releaseService.GetReleaseById(releaseId);

        if (release == null)
        {
            failedToLoad = true;
        }

        EditContext = new EditContext(release);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        StateHasChanged(); // To update preview
    }

    private void UpdateRelease()
    {
        _releaseService.UpdateRelease(releaseId, release);
        NavigationManager.NavigateTo($"/admin/project/{release.ProjectId}", true);
    }
}
